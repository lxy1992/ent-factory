// Code generated by ent, DO NOT EDIT.

package test

import (
	"time"

	"github.com/zaihui/ent-factory/spec/schema"
)

const (
	// Label holds the string label denoting the test type in the database.
	Label = "test"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUID holds the string denoting the uid field in the database.
	FieldUID = "uid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeactivatedAt holds the string denoting the deactivated_at field in the database.
	FieldDeactivatedAt = "deactivated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEnableTakeaway holds the string denoting the enable_takeaway field in the database.
	FieldEnableTakeaway = "enable_takeaway"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldAnnouncement holds the string denoting the announcement field in the database.
	FieldAnnouncement = "announcement"
	// FieldEnableAutoAccept holds the string denoting the enable_auto_accept field in the database.
	FieldEnableAutoAccept = "enable_auto_accept"
	// FieldDeliveryConfigs holds the string denoting the delivery_configs field in the database.
	FieldDeliveryConfigs = "delivery_configs"
	// FieldPayConfigs holds the string denoting the pay_configs field in the database.
	FieldPayConfigs = "pay_configs"
	// FieldPrintTimes holds the string denoting the print_times field in the database.
	FieldPrintTimes = "print_times"
	// FieldRingConfigs holds the string denoting the ring_configs field in the database.
	FieldRingConfigs = "ring_configs"
	// FieldBusinessGroupID holds the string denoting the business_group_id field in the database.
	FieldBusinessGroupID = "business_group_id"
	// FieldBusinessGroupUID holds the string denoting the business_group_uid field in the database.
	FieldBusinessGroupUID = "business_group_uid"
	// FieldDishCategories holds the string denoting the dish_categories field in the database.
	FieldDishCategories = "dish_categories"
	// FieldEndOfTakeaway holds the string denoting the end_of_takeaway field in the database.
	FieldEndOfTakeaway = "end_of_takeaway"
	// FieldMode holds the string denoting the mode field in the database.
	FieldMode = "mode"
	// FieldSelfPickupConfigs holds the string denoting the self_pickup_configs field in the database.
	FieldSelfPickupConfigs = "self_pickup_configs"
	// FieldServerID holds the string denoting the server_id field in the database.
	FieldServerID = "server_id"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldLatitude holds the string denoting the latitude field in the database.
	FieldLatitude = "latitude"
	// FieldLongitude holds the string denoting the longitude field in the database.
	FieldLongitude = "longitude"
	// FieldBanners holds the string denoting the banners field in the database.
	FieldBanners = "banners"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldPayMode holds the string denoting the pay_mode field in the database.
	FieldPayMode = "pay_mode"
	// FieldDineInConfigs holds the string denoting the dine_in_configs field in the database.
	FieldDineInConfigs = "dine_in_configs"
	// FieldDealsConfig holds the string denoting the deals_config field in the database.
	FieldDealsConfig = "deals_config"
	// FieldPrintConfig holds the string denoting the print_config field in the database.
	FieldPrintConfig = "print_config"
	// Table holds the table name of the test in the database.
	Table = "intl_business"
)

// Columns holds all SQL columns for test fields.
var Columns = []string{
	FieldID,
	FieldUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeactivatedAt,
	FieldName,
	FieldEnableTakeaway,
	FieldPhone,
	FieldAnnouncement,
	FieldEnableAutoAccept,
	FieldDeliveryConfigs,
	FieldPayConfigs,
	FieldPrintTimes,
	FieldRingConfigs,
	FieldBusinessGroupID,
	FieldBusinessGroupUID,
	FieldDishCategories,
	FieldEndOfTakeaway,
	FieldMode,
	FieldSelfPickupConfigs,
	FieldServerID,
	FieldImage,
	FieldAddress,
	FieldLatitude,
	FieldLongitude,
	FieldBanners,
	FieldSort,
	FieldPayMode,
	FieldDineInConfigs,
	FieldDealsConfig,
	FieldPrintConfig,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUID holds the default value on creation for the "uid" field.
	DefaultUID func() string
	// UIDValidator is a validator for the "uid" field. It is called by the builders before save.
	UIDValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultEnableTakeaway holds the default value on creation for the "enable_takeaway" field.
	DefaultEnableTakeaway bool
	// PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	PhoneValidator func(string) error
	// AnnouncementValidator is a validator for the "announcement" field. It is called by the builders before save.
	AnnouncementValidator func(string) error
	// DefaultEnableAutoAccept holds the default value on creation for the "enable_auto_accept" field.
	DefaultEnableAutoAccept bool
	// DefaultMode holds the default value on creation for the "mode" field.
	DefaultMode int
	// ImageValidator is a validator for the "image" field. It is called by the builders before save.
	ImageValidator func(string) error
	// AddressValidator is a validator for the "address" field. It is called by the builders before save.
	AddressValidator func(string) error
	// LatitudeValidator is a validator for the "latitude" field. It is called by the builders before save.
	LatitudeValidator func(string) error
	// LongitudeValidator is a validator for the "longitude" field. It is called by the builders before save.
	LongitudeValidator func(string) error
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int
	// DefaultPayMode holds the default value on creation for the "pay_mode" field.
	DefaultPayMode string
	// DefaultPrintConfig holds the default value on creation for the "print_config" field.
	DefaultPrintConfig schema.PrintConfig
)
